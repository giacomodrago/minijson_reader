name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Debug, Release]
        compiler: [g++-11, clang++, cl]

        exclude:
          - os: windows-latest
            compiler: g++-11
          - os: windows-latest
            compiler: clang++
          - os: ubuntu-latest
            compiler: cl

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3

    - if: ${{matrix.compiler == 'clang++'}}
      name: Install clang
      uses: egor-tensin/setup-clang@v1
      with:
        version: 13
        platform: x64

    - if: ${{matrix.compiler == 'g++-11'}}
      name: Install gcc 11
      run: sudo apt-get install g++-11

    - if: ${{matrix.os == 'ubuntu-latest'}}
      name: Install GTest (Linux)
      run: sudo apt-get install -y libgtest-dev

    - if: ${{matrix.os == 'windows-latest'}}
      name: Install GTest (Windows)
      # TODO: try to cache this artifact (e.g. using lukka/run-vcpkg)
      run: vcpkg install gtest:x64-windows

    - if: ${{matrix.os == 'ubuntu-latest'}}
      name: Install Valgrind
      run: sudo apt-get install -y valgrind

    - if: ${{matrix.os == 'windows-latest'}}
      name: Configure CMake (Windows)
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake

    - if: ${{matrix.os == 'ubuntu-latest'}}
      name: Configure CMake (Linux)
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
      env:
        CXX: ${{matrix.compiler}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest --output-on-failure -C ${{matrix.build_type}}

    - if: ${{matrix.os == 'ubuntu-latest'}}
      name: Test with valgrind
      working-directory: ${{github.workspace}}/build
      run: valgrind --error-exitcode=42 --leak-check=full ./minijson_reader_tests
