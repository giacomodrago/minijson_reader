---
name: CMake based CI

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop, master]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  build:
    strategy:
      fail-fast: false

      matrix:
        os: [macos, ubuntu, windows]

    runs-on: ${{ matrix.os }}-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install python dependencies
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          pip3 install -r ${{github.workspace}}/.requirement.txt

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          sudo apt-get install gcc-10 # libgtest-dev
          CXX=g++-10 cmake -B ${{github.workspace}}/build -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja

      - name: Install dependencies on macos
        if: startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          # brew install googletest
          cmake -B ${{github.workspace}}/build -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja

      - name: Configure CMake on windows
        if: startsWith(matrix.os, 'windows')
        # Configure CMake in a 'build' subdirectory.  See too
        run: cmake -B ${{github.workspace}}/build -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        shell: bash
        run: |
          ctest -C ${{env.BUILD_TYPE}}

      - name: Gcovr
        shell: bash
        run: |
          gcovr --root . || echo Ignored
